#!/usr/bin/python

import time
import MySQLdb
import subprocess


# Open database connection
db = MySQLdb.connect("localhost","newuser","password")

# prepare a cursor object using cursor() method
cursor = db.cursor()
cursor.execute('CREATE DATABASE IF NOT EXISTS TEST_DB;')

cursor.execute('USE TEST_DB;')
# Drop table if it already exist using execute() method.
#cursor.execute("DROP TABLE IF EXISTS TRAP")
PREVIOUS_STATUS=0
PREVIOUS_STATUS_UNIXTIME=0
sql = """CREATE TABLE IF NOT EXISTS TRAP2 (FQDN  VARCHAR(200),CURRENT_STATUS  int NOT NULL DEFAULT '0',CURRENT_STATUS_UNIXTIME  int NOT NULL, PREVIOUS_STATUS int  NOT NULL DEFAULT '0',PREVIOUS_STATUS_UNIXTIME  int NOT NULL)"""
cursor.execute(sql)

##############################################################################################################################################

for line in reversed(open("/home/nikhil/ex.log").readlines()):
    if "SNMPv2-SMI::enterprises.41717.10.1" in line :
        FQDN=line.split()[3];  
        print FQDN
    if "SNMPv2-SMI::enterprises.41717.10.2"  in line :
        CURRENT_STATUS= int(line.split()[7]); 
        print CURRENT_STATUS
	print line.split()
    if "UDP" in line:
        break;
cursor.execute("SELECT *FROM SENDTRAP")
data=cursor.fetchall()
if data:
      for row in data:
           ip= row[0] 
           community= row[1]

CURRENT_STATUS_UNIXTIME=int(time.time())
cursor.execute(('SELECT *FROM TRAP2 WHERE FQDN="\"%s\""')%FQDN)  
data=cursor.fetchall()
if data:
      for row in data:
	  print row
          PREVIOUS_STATUS=row[2] 
          PREVIOUS_STATUS_UNIXTIME=row[3]
      cursor.execute("UPDATE TRAP2 SET CURRENT_STATUS =%s,CURRENT_STATUS_UNIXTIME=%s,PREVIOUS_STATUS=%s,PREVIOUS_STATUS_UNIXTIME=%s WHERE FQDN=%s",(CURRENT_STATUS,CURRENT_STATUS_UNIXTIME,PREVIOUS_STATUS,PREVIOUS_STATUS_UNIXTIME,FQDN))
  
else:
      cursor.execute("INSERT INTO TRAP2 (FQDN,CURRENT_STATUS,CURRENT_STATUS_UNIXTIME,PREVIOUS_STATUS,PREVIOUS_STATUS_UNIXTIME) VALUES (%s,%s,%s,%s,%s)",(FQDN,CURRENT_STATUS,CURRENT_STATUS_UNIXTIME,PREVIOUS_STATUS,PREVIOUS_STATUS_UNIXTIME)) 
db.commit()


if CURRENT_STATUS==3:
          command3='echo '+"\"%s\""%"2001"+' | sudo =S snmptrap -v 1 -c '+community+' '+ip+' .1.3.6.1.4.1.41717.10 10.2.2.0  6 247 " " .1.3.6.1.4.1.41717.20.1 s '+"\"%s\""%FQDN+' .1.3.6.1.4.1.41717.20.2 i '+"\"%s\""%str(CURRENT_STATUS_UNIXTIME)+' .1.3.6.1.4.1.41717.20.3 i '+"\"%s\""%str(PREVIOUS_STATUS)+' .1.3.6.1.4.1.41717.20.4  i '+"\"%s\""%str(PREVIOUS_STATUS_UNIXTIME)
          output,error  = subprocess.Popen(command3, universal_newlines=True, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
	  print error
if CURRENT_STATUS==2:
          command1='echo '+"\"%s\""%"2001"+' | sudo -S snmptrap -v 1 -c '+community+' '+ip+' .1.3.6.1.4.1.41717.10 10.2.2.0  6 247 " "' 
          cursor.execute("SELECT *FROM TRAP2 WHERE CURRENT_STATUS='2'")
          data=cursor.fetchall()
          if data:
                i=0
         	for row in data:
			print row
         		PREVIOUS_STATUS_UNIXTIME=row[4]
	 		PREVIOUS_STATUS=row[3]
	 		CURRENT_STATUS_UNIXTIME=row[2]
	 		FQDN=row[0]
			command2=' .1.3.6.1.4.1.41717.30.'+str(4*i+1)+' s '+"\"%s\""%FQDN+' .1.3.6.1.4.1.41717.30.'+str(4*i+2)+' i '+"\"%s\""%str(CURRENT_STATUS_UNIXTIME)+' .1.3.6.1.4.1.41717.30.'+str(4*i+3)+' i '+"\"%s\""%str(PREVIOUS_STATUS)+' .1.3.6.1.4.1.41717.30.'+str(4*i+4)+' i '+"\"%s\""%str(PREVIOUS_STATUS_UNIXTIME)
         		command=command1+command2
         		command1=command
         		i=i+1
          if i>=2:
                output,error = subprocess.Popen(command, universal_newlines=True, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE).communicate()
                print command
                print error
#db.commit()
db.close()
